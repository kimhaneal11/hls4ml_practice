{
 "session": {
  "name": "v++_link_myproject_kernel",
  "uuid": "dc0dc8a3-6c19-4d9d-af6b-61be47afef7b",
  "description": "v++  -t hw --platform xilinx_u55c_gen3x16_xdma_3_202210_1 --link ../xo_files/myproject_kernel.xo -omyproject_kernel.xclbin --user_ip_repo_paths /home/csl/sky/hls4ml_practice/hls4ml_prj_u55c_new/myproject_prj/solution1/impl/ip ",
  "timestamp": "0",
  "report_file": {
   "scheme": "FILE",
   "host": "",
   "port": 0,
   "path": "/home/csl/sky/hls4ml_practice/hls4ml_prj_u55c_new/xclbin_files/_x/reports/link/v++_link_myproject_kernel_guidance.html",
   "query": "",
   "fragment": "",
   "media_type": "",
   "encoding": "",
   "data": ""
  },
  "proto_file": {
   "scheme": "FILE",
   "host": "",
   "port": 0,
   "path": "/home/csl/sky/hls4ml_practice/hls4ml_prj_u55c_new/xclbin_files/_x/v++_link_myproject_kernel_guidance.pb",
   "query": "",
   "fragment": "",
   "media_type": "",
   "encoding": "",
   "data": ""
  },
  "build_target": "",
  "config_files": []
 },
 "violation_count": 2,
 "waived_count": 0,
 "affirmation_count": 2,
 "violations": {
  "hashmap": {
   "2": {
    "id": 2,
    "severity": "SEV_WARNING",
    "rule_key": "AUTO-FREQ-SCALING-04",
    "examples": {
     "uri": [
      {
       "link_text": "This page",
       "url": {
        "scheme": "HTTPS",
        "host": "www.xilinx.com",
        "port": 0,
        "path": "/cgi-bin/docs/rdoc?t=vitis+guidance;v=2022.1;d=AUTO-FREQ-SCALING-04.html",
        "query": "",
        "fragment": "",
        "media_type": "",
        "encoding": "",
        "data": ""
       },
       "docgen_filename": ""
      }
     ]
    },
    "build_target": "",
    "expects": "",
    "details": {
     "text": "One or more timing paths failed timing requirements. The kernel clock !%0! has an original frequency equal to 300.000000 MHz. The frequency has been automatically changed to 290.0 MHz to enable proper functionality. The clock Id is 0.",
     "args": {
      "arg": [
       {
        "ref": {
         "type": "OTHER",
         "name": "ulp_ucs/aclk_kernel_00",
         "id": 0,
         "uuid": "",
         "report_type": ""
        },
        "string_val": ""
       },
       {
        "string_val": "300.000000"
       },
       {
        "string_val": "290.0"
       },
       {
        "string_val": "0"
       }
      ]
     }
    },
    "resolution": {
     "text": "The automatic frequency scaling feature allows user kernels to operate in hardware, even if at a lower frequency than intended. !URI%1! describes how to examine timing path violations.",
     "args": {
      "arg": [
       {
        "uri": {
         "link_text": "This page",
         "url": {
          "scheme": "HTTPS",
          "host": "www.xilinx.com",
          "port": 0,
          "path": "/cgi-bin/docs/rdoc?t=vitis+guidance;v=2022.1;d=AUTO-FREQ-SCALING-04.html",
          "query": "",
          "fragment": "",
          "media_type": "",
          "encoding": "",
          "data": ""
         },
         "docgen_filename": ""
        },
        "string_val": ""
       }
      ]
     }
    },
    "categories": {
     "2": "Performance",
     "0": "Accelerator",
     "1": "myproject_kernel"
    },
    "extended_categories": {},
    "impact": "IMPACT_UNKNOWN",
    "group": ""
   },
   "3": {
    "id": 3,
    "severity": "SEV_ADVISORY",
    "rule_key": "AUTO-FREQ-SCALING-08",
    "examples": {
     "uri": [
      {
       "link_text": "setting",
       "url": {
        "scheme": "HTTPS",
        "host": "www.xilinx.com",
        "port": 0,
        "path": "/cgi-bin/docs/rdoc?t=vitis+guidance;v=2022.1;d=AUTO-FREQ-SCALING-08.html",
        "query": "",
        "fragment": "",
        "media_type": "",
        "encoding": "",
        "data": ""
       },
       "docgen_filename": ""
      }
     ]
    },
    "build_target": "",
    "expects": "",
    "details": {
     "text": "For clock !%0!, the auto scaled frequency 471.0 MHz exceeds the original specified frequency. The compiler will select the original specified frequency of 450.0 MHz.",
     "args": {
      "arg": [
       {
        "ref": {
         "type": "REPORT",
         "name": "hbm_aclk",
         "id": 0,
         "uuid": "",
         "url": {
          "scheme": "FILE",
          "host": "",
          "port": 0,
          "path": "/home/csl/sky/hls4ml_practice/hls4ml_prj_u55c_new/xclbin_files/_x/link/vivado/vpl/prj/prj.runs/impl_1/dr_timing_summary.rpt",
          "query": "",
          "fragment": "",
          "media_type": "",
          "encoding": "",
          "data": ""
         },
         "report_type": "GLOBAL_REPORT_TIMING_SUMMARY_FAIL"
        },
        "string_val": ""
       },
       {
        "string_val": "471.0"
       },
       {
        "string_val": "450.0"
       }
      ]
     }
    },
    "resolution": {
     "text": "The automatic frequency scaling feature allows user kernels to operate in hardware, even if at a lower frequency than intended. In this case the clock may in fact be able to run at a higher frequency than specified. You may want to consider !URI%1! the clock frequency higher for better performance. The '--kernel_frequency' option is one way to control the frequency specification.",
     "args": {
      "arg": [
       {
        "uri": {
         "link_text": "setting",
         "url": {
          "scheme": "HTTPS",
          "host": "www.xilinx.com",
          "port": 0,
          "path": "/cgi-bin/docs/rdoc?t=vitis+guidance;v=2022.1;d=AUTO-FREQ-SCALING-08.html",
          "query": "",
          "fragment": "",
          "media_type": "",
          "encoding": "",
          "data": ""
         },
         "docgen_filename": ""
        },
        "string_val": ""
       }
      ]
     }
    },
    "categories": {
     "0": "Accelerator",
     "1": "myproject_kernel",
     "2": "Performance"
    },
    "extended_categories": {},
    "impact": "IMPACT_UNKNOWN",
    "group": ""
   }
  }
 },
 "affirmations": {
  "hashmap": {
   "4": {
    "id": 4,
    "rule_key": "PLATFORM-CLOCK-DOMAINS-01",
    "examples": {
     "uri": [
      {
       "link_text": "automatic frequency scaling",
       "url": {
        "scheme": "HTTPS",
        "host": "www.xilinx.com",
        "port": 0,
        "path": "/cgi-bin/docs/rdoc?t=vitis+guidance;v=2022.1;d=PLATFORM-CLOCK-DOMAINS-01.html",
        "query": "",
        "fragment": "",
        "media_type": "",
        "encoding": "",
        "data": ""
       },
       "docgen_filename": ""
      }
     ]
    },
    "build_target": "",
    "expects": "= or \u003e",
    "details": {
     "text": "The compiler selected the following frequencies for the runtime controllable kernel clock(s) and scalable system clock(s): \nKernel: ulp_ucs/aclk_kernel_01 = 500.0 MHz \nKernel: ulp_ucs/aclk_kernel_00 = 290.0 MHz \nSystem: hbm_aclk = 450.0 MHz \nScalable clock ulp_ucs/aclk_kernel_01 (Id = 1) is used for rtl kernels. This design has 0 rtl kernel(s).\nScalable clock ulp_ucs/aclk_kernel_00 (Id = 0) is used for hls kernels. This design has 1 hls kernel(s).",
     "args": {
      "arg": [
       {
        "string_val": "\nKernel: ulp_ucs/aclk_kernel_01 = 500.0 MHz \nKernel: ulp_ucs/aclk_kernel_00 = 290.0 MHz \nSystem: hbm_aclk = 450.0 MHz \nScalable clock ulp_ucs/aclk_kernel_01 (Id = 1) is used for rtl kernels. This design has 0 rtl kernel(s).\nScalable clock ulp_ucs/aclk_kernel_00 (Id = 0) is used for hls kernels. This design has 1 hls kernel(s)."
       }
      ]
     }
    },
    "resolution": {
     "text": "The !URI%1! feature allows user kernels to operate in hardware, even if at a lower frequency than intended."
    },
    "categories": {
     "0": "Accelerator",
     "1": "System",
     "2": "Performance"
    },
    "extended_categories": {},
    "group": ""
   },
   "1": {
    "id": 1,
    "rule_key": "SYSLINK-1",
    "examples": {
     "uri": []
    },
    "build_target": "",
    "expects": "",
    "details": {
     "text": "Created top level block diagram design dr.bd.tcl",
     "args": {
      "arg": [
       {
        "string_val": "dr.bd.tcl"
       }
      ]
     }
    },
    "categories": {},
    "extended_categories": {},
    "group": ""
   }
  }
 },
 "specs_violated": {
  "hashmap": {
   "AUTO-FREQ-SCALING-04": {
    "key": "AUTO-FREQ-SCALING-04",
    "full_name": "Auto frequency scaling - Kernel timing failure",
    "owner": "sdx",
    "raw_msg": "One or more timing paths failed timing requirements. The kernel clock %REF has an original frequency equal to %s MHz. The frequency has been automatically changed to %s MHz to enable proper functionality. The clock Id is %s.",
    "msg_abbrev": "",
    "msg_id": "0",
    "categories": {
     "0": "Accelerator",
     "1": "xclbin",
     "2": "Performance"
    },
    "resolution_msg": "The automatic frequency scaling feature allows user kernels to operate in hardware, even if at a lower frequency than intended. !URI%1! describes how to examine timing path violations.",
    "examples": {
     "uri": [
      {
       "link_text": "This page",
       "url": {
        "scheme": "HTTPS",
        "host": "www.xilinx.com",
        "port": 0,
        "path": "/cgi-bin/docs/rdoc?t=vitis+guidance;v=2022.1;d=AUTO-FREQ-SCALING-04.html",
        "query": "",
        "fragment": "",
        "media_type": "",
        "encoding": "",
        "data": ""
       },
       "docgen_filename": ""
      }
     ]
    },
    "severity": "SEV_WARNING",
    "disposition": "ENABLED",
    "expects": "",
    "affirm_msg": "",
    "dynamic_categories": {
     "2": false,
     "0": false,
     "1": true
    },
    "extensible_categories": [],
    "impact": "IMPACT_UNKNOWN",
    "group": ""
   },
   "AUTO-FREQ-SCALING-08": {
    "key": "AUTO-FREQ-SCALING-08",
    "full_name": "Auto frequency scaling - Higher frequency possible",
    "owner": "sdx",
    "raw_msg": "For clock %REF, the auto scaled frequency %s MHz exceeds the original specified frequency. The compiler will select the original specified frequency of %s MHz.",
    "msg_abbrev": "",
    "msg_id": "0",
    "categories": {
     "0": "Accelerator",
     "1": "xclbin",
     "2": "Performance"
    },
    "resolution_msg": "The automatic frequency scaling feature allows user kernels to operate in hardware, even if at a lower frequency than intended. In this case the clock may in fact be able to run at a higher frequency than specified. You may want to consider !URI%1! the clock frequency higher for better performance. The '--kernel_frequency' option is one way to control the frequency specification.",
    "examples": {
     "uri": [
      {
       "link_text": "setting",
       "url": {
        "scheme": "HTTPS",
        "host": "www.xilinx.com",
        "port": 0,
        "path": "/cgi-bin/docs/rdoc?t=vitis+guidance;v=2022.1;d=AUTO-FREQ-SCALING-08.html",
        "query": "",
        "fragment": "",
        "media_type": "",
        "encoding": "",
        "data": ""
       },
       "docgen_filename": ""
      }
     ]
    },
    "severity": "SEV_ADVISORY",
    "disposition": "ENABLED",
    "expects": "",
    "affirm_msg": "",
    "dynamic_categories": {
     "0": false,
     "1": true,
     "2": false
    },
    "extensible_categories": [],
    "impact": "IMPACT_UNKNOWN",
    "group": ""
   }
  }
 },
 "specs_affirmed": {
  "hashmap": {
   "SYSLINK-1": {
    "key": "SYSLINK-1",
    "full_name": "system_link Top Level BD Creation",
    "owner": "system_link",
    "raw_msg": "Created top level block diagram design %STR",
    "msg_abbrev": "",
    "msg_id": "0",
    "categories": {},
    "resolution_msg": "",
    "severity": "SEV_FATAL",
    "disposition": "ENABLED",
    "expects": "",
    "affirm_msg": "",
    "dynamic_categories": {},
    "extensible_categories": [],
    "impact": "IMPACT_UNKNOWN",
    "group": ""
   },
   "PLATFORM-CLOCK-DOMAINS-01": {
    "key": "PLATFORM-CLOCK-DOMAINS-01",
    "full_name": "Runtime controllable clock domains - Achieved clock frequency (MHz)",
    "owner": "sdx",
    "raw_msg": "One or more clocks failed a timing check.",
    "msg_abbrev": "",
    "msg_id": "0",
    "categories": {
     "0": "Accelerator",
     "1": "System",
     "2": "Performance"
    },
    "resolution_msg": "The !URI%1! feature allows user kernels to operate in hardware, even if at a lower frequency than intended.",
    "examples": {
     "uri": [
      {
       "link_text": "automatic frequency scaling",
       "url": {
        "scheme": "HTTPS",
        "host": "www.xilinx.com",
        "port": 0,
        "path": "/cgi-bin/docs/rdoc?t=vitis+guidance;v=2022.1;d=PLATFORM-CLOCK-DOMAINS-01.html",
        "query": "",
        "fragment": "",
        "media_type": "",
        "encoding": "",
        "data": ""
       },
       "docgen_filename": ""
      }
     ]
    },
    "severity": "SEV_WARNING",
    "disposition": "ENABLED",
    "expects": "= or \u003e",
    "affirm_msg": "The compiler selected the following frequencies for the runtime controllable kernel clock(s) and scalable system clock(s): %s",
    "description": {
     "scheme": "DATA",
     "host": "",
     "port": 0,
     "path": "",
     "query": "",
     "fragment": "",
     "media_type": "text/html",
     "encoding": "charset=UTF-8",
     "data": "\u003chtml\u003e Kernel clocks (and system clocks for some platforms) are scalable; they can preserve functionality at the cost of performance by running at a lower frequency than requested. To be scalable, a clock must be driven by an MMCM where the control registers for the MMCM can be set by the runtime over AXI4-Lite. This item shows the final runtime controlled frequencies for the scalable clocks.\u003c/html\u003e"
    },
    "dynamic_categories": {
     "0": false,
     "1": false,
     "2": false
    },
    "extensible_categories": [],
    "impact": "IMPACT_UNKNOWN",
    "group": ""
   }
  }
 }
}

